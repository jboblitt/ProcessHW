1. It is a good use of Object orientated design in that we have 
   proper constructors and destructors as well as short tasks that 
   allocate and deallocate properly.

2. Ideally waiting should be minimized within a program.  Although 
   performing a small task right now, we may want to implement it 
   later to do something more useful.  If possible, could the child 
   process have it's own destructor?  Other than that we would just 
   have to send a signal to the parent upon completion.

3. The parent could receive the return value code that represents 
   success from the child and use the read command to obtain data.